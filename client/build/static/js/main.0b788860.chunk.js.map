{"version":3,"sources":["components/Costa_Rica_Historic.js","components/Nicaragua_Historic.js","components/Mexico_Historic.js","components/El_Salvador_Historic.js","components/Globe.js","components/DateTimePicker.js","components/NavBar.js","pages/LandingPage.js","images/Max.jpg","images/Vitaliy.jpeg","images/Andre.jpeg","images/Naoki.jpg","pages/About.js","pages/ExportData.js","App.js","index.js"],"names":["Costa_Rica_Historic","x","y","hydro","wind","solar","thermal","other","interchange","data","this","props","dataFromParent","className","k","push","Object","values","i","type","value","stackgroup","marker","color","name","layout","width","height","yaxis","title","gridcolor","xaxis","showticklabels","plot_bgcolor","paper_bgcolor","font","React","Component","Nicaragua_Historic","dataDict","Mexico_Historic","internal_combustion","nuclear_power","biomass","turbo_gas","geothermalelectric","El_Salvador_Historic","geothermal","SimpleGlobe","state","globe","initialCameraDistanceRadiusScale","globeBackgroundTexture","globeCloudsTexture","globeTexture","initialCoordinates","markers","options","onClickMarker","markerClick","onGlobeTextureLoaded","console","log","DateRangePickerExample","useState","startDate","setStartDate","endDate","setEndDate","onStartDateChange","onEndDateChange","minimumLength","format","locale","enGB","startDateInputProps","endDateInputProps","focus","START_DATE","placeholder","END_DATE","NavBar","activeClassName","exact","to","axios","require","LandingPage","loading","clicked","volume","globe_markers","id","country","coordinates","globe_options","ambientLightColor","ambientLightIntensity","enableDefocus","cameraRotateSpeed","cameraZoomSpeed","cameraAutoRotateSpeed","focusAnimationDuration","focusEasingFunction","globeGlowPower","enableMarkerGlow","markerEnterAnimationDuration","markerGlowCoefficient","markerGlowPower","pointLightColor","pointLightIntensity","pointLightPositionRadiusScales","markerType","markerTooltipRenderer","country_data","bind","markerObject","event","audio","Audio","play","country_id","queryData","setState","country_string","date_string","a","config","body","dateUS","post","res","status","copy","getGlobe","DateTimePicker","src","controls","autoPlay","loop","muted","onVolumeChanged","e","volumeChangeEvent","graph","About","content","dangerouslySetInnerHTML","__html","style","textAlign","Max","alt","Vitaliy","Naoki","Andre","ExportData","App","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b788860.chunk.js","sourcesContent":["import React from 'react';\r\nimport Plot from 'react-plotly.js';\r\n\r\nexport default class Costa_Rica_Historic extends React.Component {\r\n\r\n    render() {\r\n\r\n        let x = [];\r\n        let y = [];\r\n        let hydro = [];\r\n        let wind = [];\r\n        let solar = [];\r\n        let thermal = [];\r\n        let other = [];\r\n        let interchange = [];\r\n\r\n       var data = this.props.dataFromParent\r\n        //var data = this.state.data\r\n\r\n        if(data){\r\n            delete data['_id'];\r\n\r\n            for(let k in data){\r\n                x.push(k);\r\n            }\r\n\r\n            for(let k of Object.values(data)){\r\n                y.push(k);\r\n            }\r\n            \r\n            // TODO\r\n            // we should have an array of types\r\n            // and make a general purpose utility class/func\r\n            //\r\n            // psuedo code:\r\n            // if type not in array\r\n            //      //create new dict for type\r\n            //      dict[type] = [value]\r\n            // if type in array\r\n            //      dict[type].push(value)\r\n\r\n            for(let k of y){\r\n                for(let i of k){\r\n                    if(i.type === 'Hydroelectric'){\r\n                        hydro.push(i.value)\r\n                    }\r\n                    if(i.type === 'Interchange'){\r\n                        interchange.push(i.value)\r\n                    }\r\n                    if(i.type === 'Other'){\r\n                        other.push(i.value)\r\n                    }\r\n                    if(i.type === 'Solar'){\r\n                        solar.push(i.value)\r\n                    }\r\n                    if(i.type === 'Thermal'){\r\n                        thermal.push(i.value)\r\n                    }\r\n                    if(i.type === 'Wind'){\r\n                        wind.push(i.value)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else{\r\n            return <div className=\"country-plotly\">Loading...</div>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"country-plotly\">\r\n                <Plot\r\n                    data={[\r\n                        {\r\n                            type: 'line',\r\n                            stackgroup: 'one',\r\n                            marker: {color: 'orange'},\r\n                            name: 'other',\r\n                            x: x,\r\n                            y: other\r\n                        },\r\n                        {\r\n\r\n                            type: 'line',\r\n                            stackgroup: 'one',\r\n                            marker: {color: 'red'},\r\n                            name: 'thermal',\r\n                            x: x,\r\n                            y: thermal\r\n                        },\r\n                        {\r\n\r\n                            type: 'line',\r\n                            stackgroup: 'one',\r\n                            marker: {color: 'yellow'},\r\n                            name: 'solar',\r\n                            x: x,\r\n                            y: solar,\r\n                        },\r\n                        {\r\n                            type: 'line',\r\n                            stackgroup: 'one',\r\n                            marker: {color: 'black'},\r\n                            name: 'interchange',\r\n                            x: x,\r\n                            y: interchange,\r\n                        },\r\n                        {\r\n                            type: 'line',\r\n                            stackgroup: 'one',\r\n                            marker: {color: 'cyan'},\r\n                            name: 'wind',\r\n                            x: x,\r\n                            y: wind\r\n                        },\r\n                        {\r\n\r\n                            type: 'line',\r\n                            stackgroup: 'one',\r\n                            marker: {color: 'blue'},\r\n                            name: 'hydro',\r\n                            x: x,\r\n                            y: hydro,\r\n                        },\r\n\r\n                    ]}\r\n                    layout={ \r\n                        {\r\n                            width: 800, \r\n                            height: 500,\r\n                            yaxis:{\r\n                                title: \"MWh\",\r\n                                // showticklabels: false,\r\n                                gridcolor: \"#FFFFFF55\"\r\n                            },\r\n                            xaxis:{\r\n                                title: \"Time\",\r\n                                showticklabels: false,\r\n                                gridcolor: \"#FFFFFF55\"\r\n                            },\r\n                            plot_bgcolor:\"#FFFFFF99\",\r\n                            paper_bgcolor:\"#00000000\",\r\n                            font: \r\n                                {\r\n                                    color: \"#FFFFFF\",\r\n                                },\r\n                            title: 'Costa Rica Historic'\r\n                        }\r\n                    }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nexport default class Nicaragua_Historic extends React.Component {\n\n    render() {\n\n        let x = [];\n        let y = [];\n        let hydro = [];\n        let wind = [];\n        let solar = [];\n        let thermal = [];\n        let other = [];\n        let interchange = [];\n\n        var data = this.props.dataFromParent;\n        if(data){\n            let dataDict = data;\n            delete dataDict['_id'];\n\n            for(let k in dataDict){\n                x.push(k);\n            }\n\n            for(let k of Object.values(dataDict)){\n                y.push(k);\n            }\n\n            for(let k of y){\n                for(let i of k){\n                    if(i.type === 'HYDRO'){\n                        hydro.push(i.value)\n                    }\n                    if(i.type === 'INTERCHANGE'){\n                        interchange.push(i.value)\n                    }\n                    if(i.type === 'Other'){\n                        other.push(i.value)\n                    }\n                    if(i.type === 'SOLAR'){\n                        solar.push(i.value)\n                    }\n                    if(i.type === 'THERMAL'){\n                        thermal.push(i.value)\n                    }\n                    if(i.type === 'WIND'){\n                        wind.push(i.value)\n                    }\n                }\n            }\n        }\n        else{\n            return <div className=\"country-plotly\">Loading...</div>;\n        }\n\n        return (\n            <div className=\"country-plotly\">\n                <Plot\n                    data={[\n                        {\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'black'},\n                            name: 'interchange',\n                            x: x,\n                            y: interchange,\n                        },\n                        {\n\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'yellow'},\n                            name: 'solar',\n                            x: x,\n                            y: solar,\n                        },\n                        {\n\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'blue'},\n                            name: 'hydro',\n                            x: x,\n                            y: hydro,\n                        },\n                        {\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'cyan'},\n                            name: 'wind',\n                            x: x,\n                            y: wind\n                        },\n                        {\n\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'red'},\n                            name: 'thermal',\n                            x: x,\n                            y: thermal\n                        },\n                        {\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'orange'},\n                            name: 'other',\n                            x: x,\n                            y: other\n                        },\n\n                    ]}\n                    layout={{\n                        width: 800, \n                        height: 500,\n                        yaxis:{\n                            title: \"MWh\",\n                            // showticklabels: false,\n                            gridcolor: \"#FFFFFF55\"\n                        },\n                        xaxis:{\n                            title: \"Time\",\n                            showticklabels: false,\n                            gridcolor: \"#FFFFFF55\"\n                        },\n                        plot_bgcolor:\"#FFFFFF99\",\n                        paper_bgcolor:\"#00000000\",\n                        font: \n                            {\n                                color: \"#FFFFFF\",\n                            },\n                        title: 'Nicaragua Historic'\n                    }}\n                />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nexport default class Mexico_Historic extends React.Component {\n    render() {\n\n        let x = [];\n        let y = [];\n        let hydro = [];\n        let wind = [];\n        let thermal = [];\n        let internal_combustion = [];\n        let nuclear_power = [];\n        let biomass = [];\n        let turbo_gas = [];\n        let geothermalelectric = [];\n\n\n        var data = this.props.dataFromParent;\n\n        if(data){\n            delete data['_id'];\n\n            for(let k in data){\n                x.push(k);\n            }\n\n            for(let k of Object.values(data)){\n                y.push(k);\n            }\n\n            for(let k of y){\n                for(let i of k){\n                    if(i.type === 'HydroElectric'){\n                        hydro.push(i.value)\n                    }\n                    if(i.type === 'Internal Combustion'){\n                        internal_combustion.push(i.value)\n                    }\n                    if(i.type === 'Conventional Thermal'){\n                        thermal.push(i.value)\n                    }\n                    if(i.type === 'Wind'){\n                        wind.push(i.value)\n                    }\n                    if(i.type === 'Biomass'){\n                        biomass.push(i.value)\n                    }\n                    if(i.type === 'Nuclear Power'){\n                        nuclear_power.push(i.value)\n                    }\n                    if(i.type === 'Turbo Gas'){\n                        turbo_gas.push(i.value)\n                    }\n                    if(i.type === 'Geothermalelectric'){\n                        geothermalelectric.push(i.value)\n                    }\n                }\n            }\n        }\n        else{\n            return <div className=\"country-plotly\">Loading...</div>;\n        }\n\n        return (\n            <div className=\"country-plotly\">\n                <Plot\n                    data={[\n                        {\n\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'blue'},\n                            name: 'hydro',\n                            x: x,\n                            y: hydro,\n                        },\n                        {\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'black'},\n                            name: 'internal combustion',\n                            x: x,\n                            y: internal_combustion,\n                        },\n                        {\n\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'red'},\n                            name: 'thermal',\n                            x: x,\n                            y: thermal\n                        },\n                        {\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'cyan'},\n                            name: 'wind',\n                            x: x,\n                            y: wind\n                        },\n                        {\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'orange'},\n                            name: 'biomass',\n                            x: x,\n                            y: biomass\n                        },\n                        {\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'yellow'},\n                            name: 'nuclear power',\n                            x: x,\n                            y: nuclear_power\n                        },\n                        {\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'pink'},\n                            name: 'turbo gas',\n                            x: x,\n                            y: turbo_gas\n                        },\n                        {\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'green'},\n                            name: 'geothermal electric',\n                            x: x,\n                            y: geothermalelectric\n                        },\n\n                    ]}\n                    layout={{\n                        width: 800, \n                        height: 500,\n                        yaxis:{\n                            title: \"MWh\",\n                            // showticklabels: false,\n                            gridcolor: \"#FFFFFF55\"\n                        },\n                        xaxis:{\n                            title: \"Time\",\n                            showticklabels: false,\n                            gridcolor: \"#FFFFFF55\"\n                        },\n                        plot_bgcolor:\"#FFFFFF99\",\n                        paper_bgcolor:\"#00000000\",\n                        font: \n                            {\n                                color: \"#FFFFFF\",\n                            },\n                        title: 'Mexico Historic'\n                    }}\n                />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Plot from 'react-plotly.js';\n\nexport default class El_Salvador_Historic extends React.Component {\n\n    render() {\n\n        let x = [];\n        let y = [];\n        let hydro = [];\n        let wind = [];\n        let solar = [];\n        let thermal = [];\n        let other = [];\n        let interchange = [];\n        let biomass = [];\n        let geothermal = [];\n\n        var data = this.props.dataFromParent;\n        if(data){\n            let dataDict = data;\n            delete dataDict['_id'];\n\n            for(let k in dataDict){\n                x.push(k);\n            }\n\n            for(let k of Object.values(dataDict)){\n                y.push(k);\n            }\n\n            for(let k of y){\n                for(let i of k){\n                    if(i.type === 'HydroElectric'){\n                        hydro.push(i.value)\n                    }\n                    if(i.type === 'Interconnection'){\n                        interchange.push(i.value)\n                    }\n                    if(i.type === 'Other'){\n                        other.push(i.value)\n                    }\n                    if(i.type === 'Solar'){\n                        solar.push(i.value)\n                    }\n                    if(i.type === 'Thermal'){\n                        thermal.push(i.value)\n                    }\n                    if(i.type === 'Wind'){\n                        wind.push(i.value)\n                    }\n                    if(i.type === 'Biomass'){\n                        biomass.push(i.value)\n                    }\n                    if(i.type === 'Geothermal'){\n                        geothermal.push(i.value)\n                    }\n                }\n            }\n        }\n        else{\n            return <div className=\"country-plotly\">Loading...</div>;\n        }\n\n        return (\n            <div className=\"country-plotly\">\n                <Plot\n                    data={[\n                        {\n\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'yellow'},\n                            name: 'solar',\n                            x: x,\n                            y: solar,\n                        },\n                        {\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'blue'},\n                            name: 'hydro',\n                            x: x,\n                            y: hydro,\n                        },\n                        {\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'green'},\n                            name: 'biomass',\n                            x: x,\n                            y: biomass\n                        },\n                        {\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'black'},\n                            name: 'interchange',\n                            x: x,\n                            y: interchange,\n                        },\n                        {\n\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'red'},\n                            name: 'thermal',\n                            x: x,\n                            y: thermal\n                        },\n                        {\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'cyan'},\n                            name: 'wind',\n                            x: x,\n                            y: wind\n                        },\n                        {\n                            type: 'line',\n                            stackgroup: 'one',\n                            marker: {color: 'orange'},\n                            name: 'geothermal',\n                            x: x,\n                            y: geothermal\n                        },\n\n                    ]}\n                    layout={{\n                        width: 800, \n                        height: 500,\n                        yaxis:{\n                            title: \"MWh\",\n                            // showticklabels: false,\n                            gridcolor: \"#FFFFFF55\"\n                        },\n                        xaxis:{\n                            title: \"Time\",\n                            showticklabels: false,\n                            gridcolor: \"#FFFFFF55\"\n                        },\n                        plot_bgcolor:\"#FFFFFF99\",\n                        paper_bgcolor:\"#00000000\",\n                        font: \n                            {\n                                color: \"#FFFFFF\",\n                            },\n                        title: 'El Salvador Historic'\n                    }}\n                />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactGlobe from 'react-globe';\n\n// import optional tippy styles for tooltip support\nimport 'tippy.js/dist/tippy.css';\nimport 'tippy.js/animations/scale.css';\n\n/*  IMPORTANT\n    it is worth noting that this demo only works with Three.js 0.118 thru 0.124\n    \n    There is a regex Dos (ReDos) vulnerability https://www.npmjs.com/advisories/1639 fixed in 0.125\n    soooo TL;DR don't let the user pick colors of the globe and we should be okay. \n*/\n\nexport class SimpleGlobe extends React.Component {\n    // support rendering markers with simple data\n    constructor(props) {\n        super(props);\n        this.state = {\n            globe: null,\n        }\n    }\n\n    // simple component usage\n    getGlobe() { \n        return (\n            <ReactGlobe\n                initialCameraDistanceRadiusScale=\"3.25\"\n                //TODO we should download and copy these for our server to use\n                globeBackgroundTexture=\"https://raw.githubusercontent.com/chrisrzhou/react-globe/main/textures/background.png\"\n                globeCloudsTexture=\"https://raw.githubusercontent.com/chrisrzhou/react-globe/main/textures/clouds.png\"\n                globeTexture=\"https://raw.githubusercontent.com/chrisrzhou/react-globe/main/textures/globe.jpg\"\n                initialCoordinates={this.props.initialCoordinates}\n                markers={this.props.markers}\n                options={this.props.options}\n                onClickMarker={this.props.markerClick}\n                // onGetGlobe={(globe) => this.setState({globe: globe})}\n                // onMouseOutMarker={(marker, markerObject, event) => console.log(marker, markerObject, event)}\n                onGlobeTextureLoaded={() => console.log('globe loaded')}\n                // onMouseOverMarker={(marker, markerObject, event) => console.log(marker, markerObject, event)}\n            />\n        )\n    }\n}","import React, { useState } from 'react'\nimport { enGB } from 'date-fns/locale'\nimport { DateRangePicker, START_DATE, END_DATE } from 'react-nice-dates'\nimport 'react-nice-dates/build/style.css'\n\n/*Add this as props to not be able to select past days and only from current day\n\nminimumDate={new Date()}\n\nSo we can click and drag or type or select date ranges.\nNeed hour filter?\n\n*/\n\nfunction DateRangePickerExample() {\n    const [startDate, setStartDate] = useState()\n    const [endDate, setEndDate] = useState()\n    return (\n        <div className=\"date-time-picker\">\n            <DateRangePicker\n                startDate={startDate}\n                endDate={endDate}\n                onStartDateChange={setStartDate}\n                onEndDateChange={setEndDate}\n                minimumLength={1}\n                format='MMMMMMMMMM dd, yyyy'\n                locale={enGB}\n            >\n                {({ startDateInputProps, endDateInputProps, focus }) => (\n                    <div className='date-range'>\n                        <input\n                            className={'input' + (focus === START_DATE ? ' -focused' : '')}\n                            {...startDateInputProps}\n                            placeholder='Start date'\n                        />\n                        <span className='date-range_arrow' />\n                        <input\n                            className={'input' + (focus === END_DATE ? ' -focused' : '')}\n                            {...endDateInputProps}\n                            placeholder='End date'\n                        />\n                    </div>\n                )}\n            </DateRangePicker>\n        </div>\n    )\n}\n\nexport default DateRangePickerExample","import React from 'react';\nimport './NavBar.css';\nimport { NavLink } from 'react-router-dom';\n\n\n\nfunction NavBar() {\n    return (\n        <div className=\"NavBar\">\n            <h1>CFV</h1>    \n            <div className=\"nav-bar\">\n                <NavLink\n                    className=\"nav-link\"\n                    activeClassName=\"nav-link-active\"\n                    exact\n                    to=\"/\">Map\n                </NavLink>\n\n                <NavLink\n                    className=\"nav-link\"\n                    activeClassName=\"nav-link-active\"\n                    to=\"/about\">About\n                </NavLink>\n\n                <NavLink\n                    className=\"nav-link\"\n                    activeClassName=\"nav-link-active\"\n                    to=\"/exportdata\">ExportData\n                </NavLink>\n            </div>\n        </div>\n    )\n}\n\nexport default NavBar","import '../index.css';\nimport '../App.css';\nimport '../components/Globe.css'\nimport Costa_Rica_Historic from '../components/Costa_Rica_Historic.js';\nimport Nicaragua_Historic from '../components/Nicaragua_Historic.js';\nimport Mexico_Historic from '../components/Mexico_Historic.js';\nimport El_Salvador_Historic from '../components/El_Salvador_Historic.js'\nimport {SimpleGlobe} from '../components/Globe'\nimport DateTimePicker from '../components/DateTimePicker'\nimport NavBar from '../components/NavBar'\nimport React from 'react';\nimport ReactAudioPlayer from 'react-audio-player';\n\nconst axios = require('axios');\n\nexport class LandingPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            clicked: \"none\",\n            //GLOBE settings\n            //value is abitrary and represents size\n            volume: 0.33,\n            globe_markers: [\n                {\n                    id: 'ElSalvador',\n                    country: 'El Salvador',\n                    color: 'red',\n                    coordinates: [13.598871, -88.909731],\n                    value: 20,\n                },\n                {\n                    id: 'Nicaragua',\n                    country: 'Nicaragua',\n                    color: 'gold',\n                    coordinates: [12.793830, -84.854074],\n                    value: 20,\n                },\n                {\n                    id: 'Mexico',\n                    country: 'Mexico',\n                    color: 'orange',\n                    coordinates: [23.502654, -102.227797],\n                    value: 20,\n                },\n                {\n                    id: 'CostaRica',\n                    country: 'Costa Rica',\n                    color: 'green',\n                    coordinates: [10.031846, -83.896692],\n                    value: 20,\n                }\n            ],\n            // simple and extensive options to configure globe here:\n            // https://github.com/chrisrzhou/react-globe/blob/main/docs/props.mdx\n            globe_options: {\n                ambientLightColor: 'white',\n                ambientLightIntensity: 0.15,\n                enableDefocus: false,\n                cameraRotateSpeed: 0.25,\n                cameraZoomSpeed: 1.5,\n                cameraAutoRotateSpeed: 0.025,\n                focusAnimationDuration: 1750,\n                focusEasingFunction: ['Quintic', 'InOut'],\n                globeGlowPower: 5,\n                enableMarkerGlow: true,\n                markerEnterAnimationDuration: 0.4,\n                markerGlowCoefficient: 0.5,\n                markerGlowPower: 1.2,\n                pointLightColor: 'white',\n                pointLightIntensity: 1.0,\n                pointLightPositionRadiusScales: [-1500, 500, 1500],\n                markerType: 'dot',\n                markerTooltipRenderer: marker => `${marker.country}`,\n            },\n            country_data: {\n                \"ElSalvador\" : null,\n                \"Mexico\" : null,\n                \"Nicaragua\" : null,\n                \"CostaRica\" : null,\n            },\n        }\n        this.onClickMarker = this.onClickMarker.bind(this);\n    }\n\n    /**\n     * 'onClick' event for globe\n     * gets a marker, object, and event\n     * @param {*} marker \n     * @param {*} markerObject \n     * @param {*} event \n     */\n    onClickMarker(marker, markerObject, event) {\n        let audio = new Audio(\"audio/wind.mp3\")\n        audio.volume = this.state.volume\n        audio.play();\n        console.log(marker, markerObject, event)\n        const country_id = marker['id'];\n        this.queryData(country_id, '01/09/2019')\n        this.setState({clicked: country_id});\n    }\n\n    async queryData(country_string, date_string)\n    {\n        const config = {\n            'Content-Type':'application/json'\n        }\n        \n        // Use one of these in this body\n        // dateUS -> 'mm/dd/yyyy'\n        // date -> 'dd/mm/yyyy'\n        // dateJS -> JS Date object\n\n        // These are all equivalent\n        const body  = {\n            dateUS: date_string\n        }\n        // const body  = {\n        //     date: '09/01/2019'\n        // }\n        // const body  = {\n        //     dateJS: new Date(2019, 1, 9)\n        // }\n\n        const res = await axios.post(\n            `query/${country_string}/Historic`,\n            body,\n            config\n        );\n\n        if(res.status === 200) {\n            let copy = this.state.country_data\n            copy[country_string] = res.data\n            this.setState({country_data: copy});\n        }\n    }\n\n    volumeChangeEvent(volume){\n        this.setState({volume: volume});\n    }\n\n    componentDidMount() {\n        this.setState({\n            globe: new SimpleGlobe(\n                {\n                    markerClick: this.onClickMarker,\n                    markers: this.state.globe_markers,\n                    options: this.state.globe_options,\n                    initialCoordinates: [17.4921, -84.0852]\n                }\n            ).getGlobe()\n        });\n        this.setState({loading: false})\n    }\n\n    graph(){\n        if(this.state.clicked === \"Mexico\"){\n            return(\n                <Mexico_Historic dataFromParent={this.state.country_data['Mexico']}/>\n            )\n        }\n        else if(this.state.clicked === \"ElSalvador\"){\n            return(\n                <El_Salvador_Historic dataFromParent={this.state.country_data['ElSalvador']}/>\n            )\n        }\n        else if(this.state.clicked === \"CostaRica\"){\n            return(\n                <Costa_Rica_Historic dataFromParent={this.state.country_data['CostaRica']}/>\n            )\n        }\n        else if(this.state.clicked === \"Nicaragua\"){\n            return(\n                <Nicaragua_Historic dataFromParent={this.state.country_data['Nicaragua']}/>\n            )\n        }\n        else{\n            return <div className=\"country-plotly\"/>\n        }\n    }\n\n    render() {\n        if(!this.state.loading){\n            return (\n                <div>\n                    <div className=\"globe\">\n                        <NavBar/>\n                        <DateTimePicker/>\n                        <ReactAudioPlayer\n                            src=\"audio/Distant-Mountains.mp3\"\n                            controls\n                            autoPlay\n                            loop\n                            muted={false}\n                            volume={this.state.volume}\n                            onVolumeChanged={(e) => e['path'][0].muted ? this.volumeChangeEvent(0) : this.volumeChangeEvent(e['path'][0].volume)}\n                        />\n                        {this.graph()}\n                        {this.state.globe}\n                    </div>\n                </div>\n            );\n        }\n        else{\n            return <div>Loading........</div>;\n        }\n    }\n}\n\nexport default LandingPage","export default __webpack_public_path__ + \"static/media/Max.23b782d0.jpg\";","export default __webpack_public_path__ + \"static/media/Vitaliy.bc6f6152.jpeg\";","export default __webpack_public_path__ + \"static/media/Andre.64e8d9b0.jpeg\";","export default __webpack_public_path__ + \"static/media/Naoki.c1e7a641.jpg\";","import '../index.css';\nimport '../App.css';\nimport React from 'react';\nimport Max from \"../images/Max.jpg\";\nimport NavBar from \"../components/NavBar\"\nimport Vitaliy from \"../images/Vitaliy.jpeg\";\nimport Andre from \"../images/Andre.jpeg\";\nimport Naoki from \"../images/Naoki.jpg\";\n\nexport class About extends React.Component {\n  render() {\n  \treturn (\n\t\t\t<div>\n\t\t\t<NavBar />\n\t\t\t\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\t\t\t\t{/*\n\t\t\t\tI got rid of this bc it was messing with nav bar\n\t\t\t\tfont-family: Arial, Helvetica, sans-serif; \n\t\t\t\t*/}\n\t\t\t\t<style dangerouslySetInnerHTML={{__html: \"\\nbody {\\n  margin: 0;\\n}\\n\\nhtml {\\n  box-sizing: border-box;\\n}\\n\\n*, *:before, *:after {\\n  box-sizing: inherit;\\n}\\n\\n.column {\\n  float: left;\\n  width: 33.3%;\\n  margin-bottom: 16px;\\n  padding: 0 8px;\\n}\\n\\n.card {\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\\n  margin: 8px;\\n}\\n\\n.about-section {\\n  padding: 50px;\\n  text-align: center;\\n  background-color: #474e5d;\\n  color: white;\\n}\\n\\n.container {\\n  padding: 0 16px;\\n}\\n\\n.container::after, .row::after {\\n  content: \\\"\\\";\\n  clear: both;\\n  display: table;\\n}\\n\\n.title {\\n  color: grey;\\n}\\n\\n.button {\\n  border: none;\\n  outline: 0;\\n  display: inline-block;\\n  padding: 8px;\\n  color: white;\\n  background-color: #000;\\n  text-align: center;\\n  cursor: pointer;\\n  width: 100%;\\n}\\n\\n.button:hover {\\n  background-color: #555;\\n}\\n\\n@media screen and (max-width: 650px) {\\n  .column {\\n    width: 100%;\\n    display: block;\\n  }\\n}\\n\" }} />\n\t\t\t\t<div className=\"about-section\">\n\t\t\t\t\t<h1>Our Mission</h1>\n\t\t\t\t\t<p>We are  team of bellevue college students who have teamed up with WattTime</p>\n\t\t\t\t\t<p>to help gather electrical generation data of the worlds nations. We aim to</p>\n\t\t\t\t\t<p>provide consumers, buisnesses and researchers alike with accurate information</p>\n\t\t\t\t\t<p>to allow them to make more eco-conscious decisions.</p>\n\t\t\t\t</div>\n\t\t\t\t<h2 style={{textAlign: 'center'}}>Our Team</h2>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t<img src={Max} alt=\"Max\" style={{width: '100%'}} />\n\t\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t\t<h2>Max Ayala</h2>\n\t\t\t\t\t\t\t\t<p className=\"title\">Software Engineer</p>\n\t\t\t\t\t\t\t\t<p>Some text that describes me lorem ipsum ipsum lorem.</p>\n\t\t\t\t\t\t\t\t<p>max@email.edu</p>\n\t\t\t\t\t\t\t\t<p><button className=\"button\">Contact</button></p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t<img src={Vitaliy} alt=\"Vitaliy\" style={{width: '100%'}} />\n\t\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t\t<h2>Vitaliy Stepanov</h2>\n\t\t\t\t\t\t\t\t<p className=\"title\">Software Engineer</p>\n\t\t\t\t\t\t\t\t<p>Some text that describes me lorem ipsum ipsum lorem.</p>\n\t\t\t\t\t\t\t\t<p>vitaliy@email.edu</p>\n\t\t\t\t\t\t\t\t<p><button className=\"button\">Contact</button></p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t<img src={Naoki} alt=\"Naoki\" style={{width: '100%'}} />\n\t\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t\t<h2>Naoki Lucas</h2>\n\t\t\t\t\t\t\t\t<p className=\"title\">Software Engineer</p>\n\t\t\t\t\t\t\t\t<p>Some text that describes me lorem ipsum ipsum lorem.</p>\n\t\t\t\t\t\t\t\t<p>naoki@email.edu</p>\n\t\t\t\t\t\t\t\t<p><button className=\"button\">Contact</button></p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"column\">\n\t\t\t\t\t\t<div className=\"card\">\n\t\t\t\t\t\t\t<img src={Andre} alt=\"Andre\" style={{width: '100%'}} />\n\t\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t\t<h2>Andre Weertman</h2>\n\t\t\t\t\t\t\t\t<p className=\"title\">Software Engineer</p>\n\t\t\t\t\t\t\t\t<p>Some text that describes me lorem ipsum ipsum lorem.</p>\n\t\t\t\t\t\t\t\t<p>andre@email.com</p>\n\t\t\t\t\t\t\t\t<p><button className=\"button\">Contact</button></p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n    );\n  }\n}\n\nexport default About","import '../index.css';\nimport '../App.css';\nimport React from 'react';\nimport NavBar from '../components/NavBar'\n\nexport class ExportData extends React.Component {\n    render() {\n        return (\n            <div>\n                <NavBar />\n                <h1><br/>coming soon...</h1>\n            </div>\n        );\n    }\n}\n\nexport default ExportData","import './App.css';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport {LandingPage} from './pages/LandingPage';\nimport {About} from './pages/About';\nimport {ExportData} from './pages/ExportData';\n\nfunction App() {\n  return (\n    <div className='App'>\n        <Router>\n          <Route exact path ='/' component = {LandingPage}/>\n          <Route exact path ='/about' component = {About}/>\n          <Route exact path ='/exportdata' component = {ExportData}/>\n        </Router>      \n    </div>    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}